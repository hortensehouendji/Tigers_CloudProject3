AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template WordPress_Single_Instance_With_RDS:
  WordPress is web software you can use to create a website or blog. This
  template installs a single-instance WordPress deployment that uses an Amazon
  RDS database instance for storage. 
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: String
    MinLength: '1'
    MaxLength: '255'
    ConstraintDescription: can contain everything
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
  DBClass:
    Default: db.t2.micro
    Description: Database instance class
    Type: String
    AllowedValues:
      - db.t1.micro
      - db.t2.micro
      - db.t2.small
    ConstraintDescription: must select a valid database instance type.
  DBName:
    Default: wordpress
    Description: The WordPress database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUsername:
    Default: admin
    NoEcho: 'true'
    Description: The WordPress database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    Default: password
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DBAllocatedStorage:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024Gb.
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: PV64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    m3.medium:
      Arch: PV64
    m3.large:
      Arch: PV64
    m3.xlarge:
      Arch: PV64
    m3.2xlarge:
      Arch: PV64
  AWSRegionArch2AMI:
    us-east-1:
      PV64: ami-7c807d14
      HVM64: ami-76817c1e
    us-west-2:
      PV64: ami-1b3b462b
      HVM64: ami-d13845e1
    us-west-1:
      PV64: ami-a8d3d4ed
      HVM64: ami-f0d3d4b5
    eu-west-1:
      PV64: ami-672ce210
      HVM64: ami-892fe1fe
Resources:
  WebServer:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      SubnetId: !ImportValue TigerProject3ArchitectureStack-PrivSubnet1ID
      ImageId: ami-047a51fa27710816e
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - !Ref WebServerSecurityGroup
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              yum update -y
            - |
              yum install httpd -y
            - |
              yum install php -y
            - |
              yum install php-mysql -y
            - |
              amazon-linux-extras install php7.4 -y
            - |
              cd /var/www/html
            - |
              wget https://wordpress.org/latest.tar.gz
            - |
              tar xzf latest.tar.gz
            - |
              cp -r wordpress/* /var/www/html/
            - |
              rm -rf wordpress latest.tar.gz       
            - |
              chmod -R 755 wp-content
            - |
              chown -R apache:apache wp-content
            - |
              cp -r wp-config-sample.php wp-config.php
            - sed -i "s/'database_name_here'/'
            - !Ref DBName
            - |
              '/g" wp-config.php
            - sed -i "s/'username_here'/'
            - !Ref DBUsername
            - |
              '/g" wp-config.php
            - sed -i "s/'password_here'/'
            - !Ref DBPassword
            - |
              '/g" wp-config.php
            - sed -i "s/'localhost'/'
            - !GetAtt
              - AfricanFinancialDBInstance
              - Endpoint.Address
            - |
              '/g" wp-config.php
            - |
              systemctl enable httpd && systemctl start httpd
            - |
              chkconfig httpd on
      
  AfricanFinancialDBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBName: !Ref DBName
      Engine: MySQL
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: !Ref DBClass
      AllocatedStorage: !Ref DBAllocatedStorage
      VPCSecurityGroups: 
          - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref SubnetsGroup2
  # The security group of the db instance to deploy
  DBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable dB access
      VpcId: !ImportValue TigerProject3ArchitectureStack-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !Ref WebServerSecurityGroup
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access
      VpcId: !ImportValue TigerProject3ArchitectureStack-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
  # Subnet groups where the DB will be deployed
  SubnetsGroup2:
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: group
      DBSubnetGroupName: SubnetsGroupn2
      SubnetIds: 
        - !ImportValue TigerProject3ArchitectureStack-PrivSubnet1ID
        - !ImportValue TigerProject3ArchitectureStack-PrivSubnet2ID
Outputs:
  WebsiteURL:
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - WebServer
          - PublicDnsName
        - /wordpress
    Description: WordPress Website